##################################################################################################

MBH_ARobotThatCanFly是一个开源的四轴飞行器控制项目,使用树莓派3b型做四轴飞行器的控制器,通过gpio引脚读取摇控器的输入pwm信号,计算mpu-6050陀螺仪的读数,然后对欧拉角和旋转角速度做平衡修正,最后通过gpio引脚并对四轴上的4个电调输出.

##################################################################################################

免责声明:

    此四轴飞行控制程序没有任何商业性质和盈利目的,您可以免费使用此四轴飞行控制程序.
    如果在使用过程中由于您的操作不当或程序错误而出现意外事故本程序的作者和开发社区并不承担任何责任.

##################################################################################################

注意事项:

    1.四轴飞行器不是玩具,在安装和使用时请一定要注意安全,并远离人群,确保自己和他人安全的情况下飞行.

    2.在安装和调试四轴飞行器时不要为电动机安装螺旋桨,当程序调试成功并且摇控器校准成功之后,在确认您可以正常通过键盘或摇控器来操控电动机,并且确认电机转动完全正常之后才可以根据实际情况安装螺旋桨.
    
    3.在安装螺旋桨时必须先断开4个电机的电源,再为电机安装螺旋桨,并将螺旋桨的桨叶与电机转子轴锁死,以免在电机高速转动时螺旋桨发生松动,进而出现射桨,断桨等危险情况.
    
    4.在程序运行过程中,所有的键盘按键字符均为大小写字母敏感字符.在对程序做参数调整时请注意按键的大小写.例如'q'和'Q'是两个不同的字符.
    
##################################################################################################

版本说明:

    程序的源代码使用git仓库来管理,通常有两个重要的分支master主分支和develop开发分支.
    develop分支上的代码通常非常不稳定并有很多错误.
    master分支上的代码通常是比较稳定的.
    tag版本号由3部分组成"v[大版本号].[中版本号].[小版本号]".
    例如: v1.0.53
    v  : version
    1  : 大版本号,通常是在有非常大的功能变化或特性变化时会发布新的大版本.
    0  : 中版本号,通常是在修改了一些功能性问题时发布.中版本号为偶数时表示此版本已经进行过试飞测试;而中版本号为奇数时表示此版本只是理论计算,并没有进行过实际试飞测试,可能存在问题和错误.
    53 : 小版本号,通常是源代码修改提交过的次数.
    
    
##################################################################################################

使用方法:

    1.在安装四轴飞行器时mpu-6050陀螺仪正方向对准电机0,顺时针方向为电机0,电机1,电机2,电机3,请参见setup.png安装示意图.

    2.下载源代码,并拷贝到您的树莓派上,用网线连接到莓派上,并通过pc机ssh远程到树莓派上执行这些命令.

    3.修改include/driver.h文件中摇控器接收机和电调的gpio引脚编号,编号是wiringPi的编号.

    4.执行make命令,编译源代码.如果编译成功则在源代码目录下生成一个可执行文件"release/bin/quadcopter".

    5.执行su -c 'release/bin/quadcopter --test 15 0 3000' 命令测试您的gpio和电机,参数说明如下:
        --test [wringPi引脚编号] [电机运转速度0~1000] [测试时长0~30000毫秒]
        测试时需要让电机0和电机2转动方向为顺时针;电机1和电机3转动方向为逆时针.如果您的某一个电机转动方向不正确仅需将电机的3根电源线的任意2根反接即可.
    
    6.执行su -c 'release/bin/quadcopter --ctl' 命令显示并校准您摇控器的3个通道输入pwm信号时长.
        [BF: 1600 LR: 1600 PW: 1100] --> [BF: 1600 LR: 1600 PW: 1100]
        BF:表示"前/后",也就是摇控器上控制"前/后"通道的数值,校准时"前/后"通道必须被调节到中心点.
        LR:表示"左/右",也就是摇控器上控制"左/右"通道的数值,校准时"左/右"通道必须被调节到中心点.
        PW:表示"油门",也就是摇控器上控制"油门"通道的数值,校准时"油门"通道必须被调节到最低.
        按"S"保存(Save的首字母)当前参数; 
        按"L"载入(Load的首字母)上次保存的参数.
        
    7.执行su -c 'release/bin/quadcopter --fly' 命令进行飞行模式.按键q,w,e,r,t,y,u,i,o,p可以用于切换显示不同的参数.各按键的具体含义如下:
        q : [pid: +12.00 +1.80 +8.00]——欧拉角pid参数
        t : [c_xy: +0.0 +0.0]——陀螺仪中心点校准补偿
        y : [ctl zero: 1500 1500 1000 1500 1500 1500]——摇控器起始读数
        u : [xyz: +0.0 +0.0 +0.0]——xyz欧拉角
        i : [gxyz: +0.0 +0.0 +0.0]——xyz旋转角速度
        处于不同的显示参数状态下,按下小键盘上的数字按钮可以对这些参数做相应的调整,其中7,8,9按键为增加参数值;4,5,6按键为减小参数值.例如:
        在当前显示欧拉角pid参数时,按"7"则对kp加0.1;按"4"则对kp减0.1;按"8"则对ki加0.1;按"5"则对ki减0.1;按"9"则对kd加0.1;按"6"则对kd减0.1.
        按"S"保存(Save的首字母)当前参数;
        按"L"载入(Load的首字母)上次保存的参数.
    
    8.当程序运行时,电机处于锁定状态(停止转动),不可以通过油门控制电机的转动.
        摇控器操作:
            将摇控器油门拉至最低,将方向拉至最左侧,并等待3秒以上时间,则电机解锁;
            将摇控器油门拉至最低,将方向拉至最右侧,并等待3秒以上时间,则电机锁定(停止转动).
        键盘操作:
            按下'F'键则电机解锁;
            按下'J'键则电机锁定(停止转动).
            
    9.在电机解锁时:
        摇控器的油门增加,电机加速;摇控器的油门减小,电机减速.
        按下键盘按键'+'电机加速;
        按下键盘按键'-'电机减速;
        按下键盘按键'0'电机停转;
    
    10.停止调试需要按以下顺序操作:
        1)将油门拉至最低或按下键盘'0'键,使电机停转;
        2)将摇控器油门拉至最低,将方向拉至最右侧,并等待3秒以上时间(或按下'J'键),电机锁定;
        3)关闭四轴飞行控制程序;
        4)关闭摇控器;
        5)将电机的电源断开.
        6)调试结束.

##################################################################################################
